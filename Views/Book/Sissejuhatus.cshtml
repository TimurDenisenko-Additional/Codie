<!DOCTYPE html>
<html lang="et">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>1. peatükk: Sissejuhatus C#-i</title>
</head>
<body>
    <h1>1. peatükk: Sissejuhatus C#-i</h1>
    <p>Esimeses peatükis tutvume C# programmeerimiskeelega ja selle võimalustega, vaatame, kuidas seada üles arenduskeskkonda ja loome oma esimese programmi. Alustame põhitõdedest, et saaksite kiiresti programmeerimisega alustada.</p>

    <h2>1.1. Mis on C#?</h2>
    <p><strong>C#</strong> on objektorienteeritud programmeerimiskeel, mille on välja töötanud Microsoft. See on osa .NET platvormist ja seda kasutatakse erinevate rakenduste loomiseks, sealhulgas töölaua- ja veebirakendused, mobiilirakendused ning mängud.</p>
    <ul>
        <li>Lihtne ja loogiline süntaks</li>
        <li>Võimas objektorienteeritud programmeerimise tugi</li>
        <li>Tugi mitmetöötlusele ja asünkroonsele programmeerimisele</li>
        <li>Ulatuslik .NET Framework klasside teek</li>
        <li>Platvormideülene võimalus .NET Core abil</li>
    </ul>

    <h2>1.2. Arenduskeskkonna seadistamine (Visual Studio)</h2>
    <p>C# programmide kirjutamiseks ja käivitamiseks kasutame <strong>Visual Studio</strong> keskkonda, mis pakub kõiki vajalikke tööriistu.</p>
    <p><strong>Visual Studio installimise sammud:</strong></p>
    <ol>
        <li>Minge Visual Studio ametlikule veebilehele (<a href="https://visualstudio.microsoft.com/" target="_blank">https://visualstudio.microsoft.com/</a>) ja valige <strong>Visual Studio Community</strong>.</li>
        <li>Laadige alla ja installige programm.</li>
        <li>Installimise käigus valige töökoormus <strong>.NET Desktop Development</strong>, mis sisaldab kõiki vajalikke komponente C# arenduseks.</li>
    </ol>
    <p><em>Näpunäide:</em> Kui eelistate kergemat arenduskeskkonda, võite kasutada Visual Studio Code’i ja lisada C# laienduse.</p>

    <h2>1.3. Esimene programm: "Hello, World!"</h2>
    <p>Kui Visual Studio on installitud, loome oma esimese C# projekti – klassikalise <strong>"Hello, World!"</strong> programmi, mis kuvab konsoolis lihtsa sõnumi.</p>
    <p><strong>Projekti loomise sammud:</strong></p>
    <ol>
        <li>Avage Visual Studio ja valige <strong>Loo uus projekt</strong>.</li>
        <li>Valige projekti tüübiks <strong>Konsoolirakendus (.NET Core)</strong>.</li>
        <li>Sisestage projekti nimi ja vajutage <strong>Loo</strong>.</li>
    </ol>
    <p>Tulemuseks on lihtne konsoolirakendus järgmise koodiga:</p>

    <pre>
    <code>
using System;

namespace HelloWorld
{
    class Program
    {
        static void Main(string[] args)
        {
            Console.WriteLine("Hello, World!");
        }
    }
}
        </code>
    </pre>

    <h3>Koodi selgitus:</h3>
    <ul>
        <li><code>using System;</code> — süsteemiteegi kasutamine, mis sisaldab põhilisi klasse, sealhulgas konsoolitööriistu.</li>
        <li><code>namespace HelloWorld</code> — nimede ruum, mis grupeerib seotud klassid ja muud komponendid.</li>
        <li><code>class Program</code> — klass, mis sisaldab programmi põhiloogikat.</li>
        <li><code>static void Main(string[] args)</code> — programmi peamine sisenemispunkt; meetod <code>Main</code> täidetakse esimesena.</li>
        <li><code>Console.WriteLine("Hello, World!");</code> — käsk, mis kuvab konsoolis teksti.</li>
    </ul>

    <p><strong>Programmi käivitamine:</strong> Vajutage <code>Ctrl + F5</code> või <strong>Käivita</strong> nuppu Visual Studio-s. Konsoolile ilmub järgmine väljund:</p>
    <pre><code>Hello, World!</code></pre>

    <h2>1.4. Programmi struktuur C#-is</h2>
    <p>C# programm koosneb järgmistest elementidest:</p>
    <ul>
        <li><strong>Nimede ruum (namespace)</strong>: Rühmitab seotud klassid, et vältida nimekonflikte.</li>
        <li><strong>Klass (class)</strong>: Põhiüksus, mis sisaldab meetodeid ja andmeid.</li>
        <li><strong>Meetod (method)</strong>: Koodiblokk, mis täidab kindlaid ülesandeid.</li>
        <li><strong>Peamine meetod Main</strong>: Programm täitmine algab siit.</li>
    </ul>

    <h2>1.5. C# põhisüntaks</h2>
    <h3>1. Muutujad ja andmetüübid</h3>
    <p>C# on tugevalt tüübitud keel: iga element peab olema määratud kindla tüübiga.</p>
    <p><strong>Näiteid andmetüüpidest:</strong> <code>int</code> (täisarvud), <code>double</code> (kümnendmurrud), <code>string</code> (sõned).</p>

    <pre>
    <code>
int age = 25;
double height = 1.75;
string name = "Alice";
Console.WriteLine($"Nimi: {name}, Vanus: {age}, Kõrgus: {height}");
        </code>
    </pre>

    <h3>2. Operaatorid</h3>
    <ul>
        <li><strong>Aritmeetilised</strong>: <code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>%</code></li>
        <li><strong>Võrdlus</strong>: <code>==</code>, <code>!=</code>, <code>&lt;</code>, <code>&gt;</code>, <code>&lt;=</code>, <code>&gt;=</code></li>
        <li><strong>Loogilised</strong>: <code>&&</code>, <code>||</code>, <code>!</code></li>
    </ul>

    <pre>
    <code>
int x = 5;
int y = 10;
bool result = (x &lt; y) &amp;&amp; (x != 0);
Console.WriteLine(result); // true
        </code>
    </pre>

    <h2>Harjutused</h2>
    <ol>
        <li><strong>Muuda teksti:</strong> Muutke programmi "Hello, World!" tekst ja käivitage see uuesti.</li>
        <li><strong>Aritmeetilised operatsioonid:</strong> Looge programm, mis määrab kaks muutujat <code>a</code> ja <code>b</code> ning kuvab nende summa, vahe, korrutise ja jagatise.</li>
        <li><strong>Töö muutujatega:</strong> Kirjutage kood, mis määrab kolm muutujat (<code>nimi</code>, <code>vanus</code> ja <code>riik</code>) ja kuvab teabe järgmisel kujul: <code>Nimi: [nimi], Vanus: [vanus], Riik: [riik]</code>.</li>
    </ol>

    <h2>Kokkuvõte</h2>
    <p>Selles peatükis õppisime, kuidas paigaldada ja seadistada Visual Studio, kirjutasime esimese programmi ja uurisime C# programmi struktuuri. Järgmistes peatükkides süveneme andmetüüpidesse, juhtvoogude kontrolli ja liigume edasi objektorienteeritud programmeerimise alusteni.</p>
</body>
</html>
